{"version":3,"sources":["map/map.module.css","map/gameReducer.js","gameEngine/gameApi.js","map/mapCOnt.js","UI/UIContainer.js","App.js","serviceWorker.js","store/store.js","index.js"],"names":["module","exports","initial","play","movePattern","score","showAnswer","dimension","start","choose","gameStatus","data","type","payload","move","setStart","gameRed","state","action","current","dim","game","history","moves","filter","element","Math","floor","random","length","push","alert","MapMini","props","btnGroupClasses","classNames","s","block","stblock","id","answer","disabled","onClick","showAnswerD","console","log","scored","chooseD","gameStatusD","className","Path","useState","stateF","countRef","useRef","useEffect","i","loop","setTimeout","path","map","el","key","connect","dispatch","startMove","setStartD","Dimension","arr","Array","fill","answerF","big9","big25","m","ind","toggle","React","selectedValue","setSelectedValue","handleChange","event","target","value","FormControlLabel","control","Radio","checked","onChange","name","inputProps","label","Button","variant","color","App","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d8101920.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"big25\":\"map_big25__zX5Pc\",\"block\":\"map_block__2g7lS\",\"big9\":\"map_big9__23H-c\",\"stblock\":\"map_stblock__3jCUU\",\"path\":\"map_path__12oWm\",\"answer\":\"map_answer__2TOYI\"};","const initial = {\r\n    play:false,\r\n    movePattern: [],\r\n    score: 0,\r\n    showAnswer: false,\r\n    dimension: 3,\r\n    start: null,\r\n    choose:false\r\n\r\n}\r\n\r\n\r\nconst gameRed = (state=initial, action)=>{\r\n    switch (action.type) {\r\n        case 'GAME-STATUS':\r\n            return {\r\n                ...state,\r\n                play: action.payload\r\n            }\r\n            case 'CHOOSE':\r\n            return {\r\n                ...state,\r\n                choose: action.payload\r\n            }\r\n        case 'MOVE':\r\n            return {\r\n                ...state,\r\n                movePattern: action.payload\r\n            }\r\n        case 'SCORE':\r\n            return {\r\n                ...state,\r\n                score: state.score +action.payload\r\n            }\r\n\r\n            case 'SHOW-ANSWER':\r\n            return {\r\n                ...state,\r\n                showAnswer: action.payload\r\n            }\r\n            case 'SET-DIMENSION':\r\n            return {\r\n                ...state,\r\n                dimension: action.payload\r\n            }\r\n            case 'SET-START':\r\n            return {\r\n                ...state,\r\n                start: action.payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const gameStatus =(data)=>{\r\n    return{\r\n        type: 'GAME-STATUS',\r\n        payload: data,\r\n    }\r\n}\r\nexport const move =(data)=>{\r\n    return{\r\n        type: 'MOVE',\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const score =(much)=>{\r\n    return{\r\n        type: 'SCORE',\r\n        payload: much,\r\n    }\r\n}\r\n\r\nexport const showAnswer =(data)=>{\r\n    return{\r\n        type: 'SHOW-ANSWER',\r\n        payload: data,\r\n    }\r\n}\r\nexport const dimension =(data)=>{\r\n    return{\r\n        type: 'SET-DIMENSION',\r\n        payload: data,\r\n    }\r\n}\r\nexport const choose =(data)=>{\r\n    return{\r\n        type: 'CHOOSE',\r\n        payload: data,\r\n    }\r\n}\r\nexport const setStart =(data)=>{\r\n    return{\r\n        type: 'SET-START',\r\n        payload: data,\r\n    }\r\n}\r\nexport default gameRed","import ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport React from \"react\";\r\nlet play ={\r\n    up(current,dim){\r\n        return current-dim\r\n    },\r\n    down(current,dim){\r\n        return current+dim\r\n    },\r\n    right(current,dim){\r\n        return current+1\r\n    },\r\n    left(current,dim){\r\n        return current-1\r\n    }\r\n\r\n}\r\nexport function game(current,dim,history) {\r\n    let moves =['UP', 'DOWN', 'LEFT', 'RIGHT']\r\n\r\n    if (current <= dim){\r\n        moves =moves.filter(element => element!=='UP' )\r\n    }\r\n    if ((current-1)%dim ===0 || current ===1){\r\n        moves =moves.filter(element => element!=='LEFT' )\r\n    }\r\n    if (current%dim === 0){\r\n        moves = moves.filter(element => element!=='RIGHT' )\r\n    }\r\n    if (current > (dim*dim)-dim){\r\n        moves =moves.filter(element => element!=='DOWN' )\r\n    }\r\n\r\n    let chooseMove = Math.floor(Math.random()*moves.length)\r\n    let move = moves[chooseMove]\r\n\r\n\r\n\r\n    switch(move){\r\n\r\n        case 'UP':\r\n            history.push(<ArrowUpwardIcon/>)\r\n            return play.up(current,dim)\r\n\r\n        case 'DOWN':\r\n            history.push(<ArrowDownwardIcon/>)\r\n            return play.down(current,dim)\r\n\r\n        case 'LEFT':\r\n            history.push(<ArrowBackIcon/>)\r\n            return play.left(current,dim)\r\n\r\n        case 'RIGHT':\r\n            history.push(<ArrowForwardIcon/>)\r\n            return play.right(current,dim)\r\n\r\n        default:\r\n            alert(`game ended on field ${current}`)\r\n    }\r\n\r\n\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport  s from './map.module.css';\r\nimport classNames from 'classnames'\r\nimport {connect} from \"react-redux\";\r\nimport {choose, gameStatus, move, score, setStart, showAnswer,} from \"./gameReducer\";\r\nimport {game} from \"../gameEngine/gameApi\";\r\n\r\n\r\nconst Map =(props) =>{\r\n    let Dimension = props.dimension\r\n    let arr = Array(Dimension*Dimension).fill('')\r\n    let history =[];\r\n\r\n    let [answer, answerF] = useState(null)\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!props.gameStatus) return\r\n        let start = Math.floor((Math.random()*8)+1);\r\n        props.setStartD(start)\r\n        let answer=start\r\n\r\n        for(let i=0; i <=9; ++i){\r\n            answer=game(answer, Dimension,history)\r\n        }\r\n        answerF(answer)\r\n\r\n        props.startMove(history)\r\n    },[props.gameStatus])\r\n\r\n    let btnGroupClasses = classNames(\r\n        {\r\n            [s.big9]: props.dimension===3,\r\n            [s.big25]: props.dimension===5\r\n        }\r\n    );\r\n\r\n    return(\r\n        <div >\r\n            <div className={btnGroupClasses}>\r\n                {arr.map((m,ind)=><MapMini {...props}\r\n                                           id={ind+1}\r\n                                           start={props.start}\r\n                                           answer={answer}\r\n                                           key={ind}\r\n                />)}\r\n\r\n            </div>\r\n            <Path game={props.gameStatus}\r\n                  history={props.movePattern}\r\n                  start={props.start}\r\n                  answer={answer}\r\n                  chooseD={props.chooseD}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst MapMini =(props)=>{\r\n\r\n    function answer() {\r\n\r\n        props.showAnswerD(true)\r\n\r\n        if(props.id===props.answer){\r\n            console.log('cool')\r\n            props.scored(100)\r\n        }\r\n        else{\r\n            console.log('wrong')\r\n            props.scored(-100)\r\n        }\r\n        props.chooseD(false)\r\n        props.gameStatusD(false)\r\n\r\n    }\r\n\r\n    let btnGroupClasses = classNames(\r\n        s.block,\r\n        {\r\n            [s.stblock]: props.id===props.start,\r\n            [s.answer]: props.showAnswer && props.id===props.answer\r\n        }\r\n    );\r\n\r\n    return(\r\n        <button disabled={!props.choose} onClick={()=>{answer()}} className={btnGroupClasses} >\r\n            {props.id===props.start ? 'Start' :props.id}\r\n        </button>\r\n    )\r\n}\r\n\r\nconst Path = (props)=>{\r\n\r\n    let [state, stateF] =useState([])\r\n\r\n    const countRef = useRef(state);\r\n    countRef.current = state;\r\n\r\n\r\n    useEffect(()=>{\r\n        countRef.current=[]\r\n        stateF([]);\r\n        if(props.start === null) return\r\n        let i=0;\r\n        (function loop(){\r\n\r\n            stateF([...countRef.current,props.history[i]]);\r\n            if (++i < props.history.length) {\r\n                setTimeout(loop, 500);\r\n            }\r\n            else{\r\n\r\n                props.chooseD(true)\r\n            }\r\n        })();\r\n\r\n    },[props.start])\r\n\r\n    return(\r\n        <div className={s.path}>\r\n\r\n            {  state.map((el,id) =>(<div key={id}>{state[id]}</div>))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        gameStatus: state.game.play,\r\n        movePattern: state.game.movePattern,\r\n        score: state.game.score,\r\n        showAnswer:state.game.showAnswer,\r\n        dimension: state.game.dimension,\r\n        start: state.game.start,\r\n        choose: state.game.choose\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        gameStatusD(data){\r\n            dispatch(gameStatus(data))\r\n        },\r\n        chooseD(data){\r\n            dispatch(choose(data))\r\n        },\r\n        startMove(data){\r\n            dispatch(move(data))\r\n        },\r\n        scored(data){\r\n            dispatch(score(data))\r\n        },\r\n\r\n        showAnswerD(data){\r\n            dispatch(showAnswer(data))\r\n        },\r\n        setStartD(data){\r\n            dispatch(setStart(data))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Map)","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {dimension, gameStatus, move, setStart, showAnswer,} from \"../map/gameReducer\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n\r\nconst Interface =(props)=>{\r\n    function newGame(){\r\n        props.gameStatusD(true)\r\n        props.showAnswerD(false)\r\n    }\r\n    const [selectedValue, setSelectedValue] = React.useState('a');\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n            <FormControlLabel value=\"end\" control={<Radio\r\n                checked={selectedValue === 'a'}\r\n                disabled={props.gameStatus}\r\n                onChange={handleChange}\r\n                onClick={()=>props.toggle(3)}\r\n                value=\"a\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'A' }}\r\n            />} label=\"3x3\" />\r\n\r\n            <FormControlLabel value=\"end\" control={<Radio\r\n                checked={selectedValue === 'b'}\r\n                disabled={props.gameStatus}\r\n                onChange={handleChange}\r\n                onClick={()=>props.toggle(5)}\r\n                value=\"b\"\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'B' }}\r\n            />} label=\"5x5\" />\r\n\r\n\r\n            <p>Score {props.score}</p>\r\n            {\r\n            <Button disabled={props.gameStatus} variant=\"contained\" onClick={newGame} color=\"secondary\">\r\n                Start New Game\r\n            </Button>\r\n           }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        gameStatus: state.game.play,\r\n        movePattern: state.game.movePattern,\r\n        score: state.game.score,\r\n        dimension: state.game.dimension,\r\n        start: state.game.start\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        gameStatusD(data){\r\n            dispatch(gameStatus(data))\r\n        },\r\n        showAnswerD(data){\r\n            dispatch(showAnswer(data))\r\n        },\r\n        toggle(data){\r\n            dispatch(showAnswer(false))\r\n            dispatch(move([]))\r\n            dispatch(dimension(data))\r\n            dispatch(gameStatus(false))\r\n            dispatch(setStart(null))\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Interface)","import React from 'react';\nimport './App.css';\nimport Map from \"./map/mapCOnt\";\nimport Interface from \"./UI/UIContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Interface/>\n        <Map/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from 'redux'\r\nimport gameRed from \"../map/gameReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    game: gameRed\r\n})\r\n\r\n\r\nconst store = createStore(reducers)\r\n\r\nwindow.store = store\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n      <App />\n  </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}